generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @unique
  invoices     Invoice[]
  transactions Transaction[]
  settings     Settings?

  @@map("users")
}

model Invoice {
  id          String        @id @default(uuid())
  user        User          @relation(fields: [userId], references: [id])
  userId      String        @map("user_id")
  address     String
  starsAmount Int           @map("stars_amount")
  tokenAmount Float         @map("token_amount")
  tokenSymbol Symbol        @map("token_symbol")
  lpFee       Int           @map("liquidity_provider_fee")
  bchFees     Int           @map("blockchain_fees")
  status      InvoiceStatus @default(INITIALIZED)
  hash        String        @unique @map("invoice_hash")
  createdAt   DateTime      @default(now()) @map("created_at")

  @@map("invoices")
}

model Transaction {
  id          String            @id @default(uuid())
  user        User              @relation(fields: [userId], references: [id])
  userId      String            @map("user_id")
  address     String
  starsAmount Int               @map("stars_amount")
  tokenAmount Float             @map("token_amount")
  tokenSymbol Symbol            @map("token_symbol")
  lpFee       Int               @map("liquidity_provider_fee")
  bchFees     Int               @map("blockchain_fees")
  status      TransactionStatus @default(PENDING)
  hash        String?            @unique @map("transaction_hash")
  createdAt   DateTime          @default(now()) @map("created_at")

  @@map("transactions")
}

model Settings {
  id            String  @id @default(uuid())
  user          User    @relation(fields: [userId], references: [id])
  userId        String  @unique @map("user_id")
  tokenSymbol   Symbol  @default(TON) @map("token_symbol")
  vibration     Boolean @default(true) @map("in_app_vibration")
  notifications Boolean @default(true) @map("in_app_notifications")

  @@map("settings")
}

enum Symbol {
  TON
  USDT
}

enum InvoiceStatus {
  INITIALIZED
  APPROVED
  PAYED
}

enum TransactionStatus {
  PENDING
  CONFIRMED
  FAILED
}
