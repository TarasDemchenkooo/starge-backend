generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @unique
  notifications Boolean       @default(true)
  transactions  Transaction[]

  @@map("users")
}

model Transaction {
  id          String            @id @default(uuid())
  user        User              @relation(fields: [userId], references: [id])
  userId      String            @map("user_id")
  address     String
  starsAmount Int               @map("stars_amount")
  tokenAmount Float             @map("token_amount")
  tokenSymbol Symbol            @map("token_symbol")
  lpFee       Int               @map("liquidity_provider_fee")
  bchFees     Int               @map("blockchain_fees")
  status      TransactionStatus @default(PENDING)
  chargeId    String            @unique @map("charge_id")
  hash        String?           @map("transaction_hash")
  createdAt   DateTime          @default(now()) @map("created_at")

  @@map("transactions")
}

model Outbox {
  id          String   @id @default(uuid())
  payload     Json
  tokenSymbol Symbol   @map("token_symbol")
  locked      Boolean  @default(false)
  createdAt   DateTime @default(now()) @map("created_at")

  @@map("outbox")
}

enum Symbol {
  TON
  USDT
}

enum TransactionStatus {
  PENDING
  CONFIRMED
  FAILED
}
